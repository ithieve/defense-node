package com.mygdx.project4;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;

public class LoadingScreen implements Screen {
    ShapeRenderer shapeRenderer;


    /**
     * Called when this screen becomes the current screen for a {@link Game}.
     */
    @Override
    public void show() {
        shapeRenderer = new ShapeRenderer();

    }

    /**
     * Called when the screen should render itself.
     *
     * @param delta The time in seconds since the last render.
     */
    @Override
    public void render(float delta) {

        //Clear screen
        Gdx.gl.glClearColor(0,0,0,1);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
        //screen size is set to 640 480

        shapeRenderer.begin(ShapeRenderer.ShapeType.Filled);

        shapeRenderer.rectLine(80,80,130,180, 10);
        shapeRenderer.rectLine(180,80, 130,180,10);
        shapeRenderer.rectLine(130,180, 130,300,10);
        shapeRenderer.rectLine(130,220, 80,260,10);
        shapeRenderer.rectLine(130,220, 190,260,10);


        shapeRenderer.circle(130,300,40);

        shapeRenderer.end();

    }

    /**
     * @param width
     * @param height
     * @see ApplicationListener#resize(int, int)
     */
    @Override
    public void resize(int width, int height) {
        // TODO Autogenerated method
    }

    /**
     * @see ApplicationListener#pause()
     */
    @Override
    public void pause() {
        // TODO Autogenerated method
    }

    /**
     * @see ApplicationListener#resume()
     */
    @Override
    public void resume() {
        // TODO Autogenerated method
    }

    /**
     * Called when this screen is no longer the current screen for a {@link Game}.
     */
    @Override
    public void hide() {
        // TODO Autogenerated method
    }

    /**
     * Called when this screen should release all resources.
     */
    @Override
    public void dispose() {
        shapeRenderer.dispose();

    }
}
